package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.other

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.event.WorldEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.utils.PlayerUtils
import net.ccbluex.liquidbounce.utils.misc.RandomUtils
import net.ccbluex.liquidbounce.utils.timer.MSTimer
import net.ccbluex.liquidbounce.value.BoolValue
import net.minecraft.network.play.client.*
import net.minecraft.network.play.server.S07PacketRespawn
import net.minecraft.network.play.server.S08PacketPlayerPosLook

class Hypixel2 : DisablerMode("Hypixel2") {
    private val disabler1 = BoolValue("${valuePrefix}disabler1", true)
    private val disabler2 = BoolValue("${valuePrefix}disabler2", false)
    
    override fun onPacket(event: PacketEvent) {\
      val packet = event.packet
      
      if (disabler1.get()) {
        if (packet is C03PacketPlayer && mc.thePlayer.ticksExisted < 70) {
            event.cancelEvent()
        }
        if (packet is C0BPacketEntityAction) {
            event.cancelEvent()
        }
        if (mc.getNetHandler().doneLoadingTerrain) {
            if (!e.isCanceled() && (e.getPacket() instanceof C03PacketPlayer || e.getPacket() instanceof C0FPacketConfirmTransaction || e.getPacket() instanceof C00PacketKeepAlive)) {
                e.setCanceled();
                packets.add(e.getPacket());
            }
        }

        if (e.getPacket() instanceof C03PacketPlayer) {
            C03PacketPlayer packet = (C03PacketPlayer) e.getPacket();
            if (!mc.thePlayer.isUsingItem() && !packet.isMoving()) {
                e.setCanceled();
            }
        }


        if (e.getPacket() instanceof C03PacketPlayer.C05PacketPlayerLook) {
            C03PacketPlayer.C05PacketPlayerLook packet = (C03PacketPlayer.C05PacketPlayerLook) e.getPacket();
            if (!mc.thePlayer.onGround) {
                e.setCanceled();
                mc.thePlayer.sendQueue.addToSendQueueSilent(new C03PacketPlayer.C04PacketPlayerPosition(packet.getPositionX(), packet.getPositionY(), packet.getPositionZ(), false));
            }
        }

        if (e.getPacket() instanceof C03PacketPlayer.C06PacketPlayerPosLook) {
            C03PacketPlayer.C06PacketPlayerPosLook packet = (C03PacketPlayer.C06PacketPlayerPosLook) e.getPacket();

        }


        if (e.getPacket() instanceof S08PacketPlayerPosLook) {
            S08PacketPlayerPosLook packet = (S08PacketPlayerPosLook) e.getPacket();
            mc.thePlayer.sendQueue.addToSendQueueSilent(new C03PacketPlayer.C04PacketPlayerPosition(packet.getX(), packet.getY(), packet.getZ(), false));
            mc.thePlayer.setPosition(packet.getX(), packet.getY(), packet.getZ());

            mc.displayGuiScreen(null);
            e.setCanceled();
        }

        if (mc.thePlayer.ticksExisted % 4 == 0) {
            PacketUtil.sendPacket(new C0CPacketInput());
        }
      }
    }
}
